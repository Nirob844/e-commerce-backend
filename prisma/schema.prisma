// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// schema.prisma

model User {
  id        String   @id @default(uuid())
  username  String
  email     String   @unique
  password  String
  type      UserType
  catalog   Catalog?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Order     Order[]
}

enum UserType {
  buyers
  sellers
}

model Catalog {
  id        String    @id @default(uuid())
  name      String
  seller    User      @relation(fields: [sellerId], references: [id])
  sellerId  String    @unique
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Product {
  id              String            @id @default(uuid())
  name            String
  price           Float
  catalog         Catalog           @relation(fields: [catalogId], references: [id])
  catalogId       String
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  order           Order?            @relation(fields: [orderId], references: [id])
  orderId         String?
  OrderedProducts OrderedProducts[]
}

model Order {
  id              String            @id @default(uuid())
  buyer           User              @relation(fields: [buyerId], references: [id])
  buyerId         String
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  products        Product[]
  orderedProducts OrderedProducts[]
}

model OrderedProducts {
  id        String   @id @default(uuid())
  orderId   String
  productId String
  quantity  Int // Define quantity as a required number
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  order     Order    @relation(fields: [orderId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}
